{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\OneDrive\\\\Desktop\\\\Memories-Web-App\\\\client\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from \"./styles.js\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  currentId,\n  setCurrentId\n}) {\n  _s();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n\n  // Get the post to edit, if any\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // Load the post data into the form when editing\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n\n  // Clear form fields\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  // Handle change for form fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPostData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Handle tags change, split by commas and trim spaces\n  const handleTagsChange = e => {\n    const tagsArray = e.target.value.split(',').map(tag => tag.trim());\n    setPostData(prevState => ({\n      ...prevState,\n      tags: tagsArray\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing ' : 'Creating ', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (comma separated)\",\n        fullWidth: true,\n        value: postData.tags.join(', '),\n        onChange: handleTagsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData(prevState => ({\n            ...prevState,\n            selectedFile: base64\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"+Nuo7PCRKBSMgnU/FH1aSKLQf4A=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","FileBase","useDispatch","useSelector","createPost","updatePost","jsxDEV","_jsxDEV","Form","currentId","setCurrentId","_s","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","handleChange","name","value","target","prevState","handleTagsChange","tagsArray","split","map","tag","trim","className","paper","children","autoComplete","noValidate","root","form","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","onChange","required","join","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adity/OneDrive/Desktop/Memories-Web-App/client/src/components/Form/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport useStyles from \"./styles.js\";\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nfunction Form({ currentId, setCurrentId }) {\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n    \r\n    // Get the post to edit, if any\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    // Load the post data into the form when editing\r\n    useEffect(() => {\r\n        if (post) {\r\n            setPostData(post);\r\n        }\r\n    }, [post]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        } else {\r\n            dispatch(createPost(postData));\r\n        }\r\n        \r\n        clear();\r\n    }\r\n\r\n    // Clear form fields\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        });\r\n    }\r\n\r\n    // Handle change for form fields\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPostData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Handle tags change, split by commas and trim spaces\r\n    const handleTagsChange = (e) => {\r\n        const tagsArray = e.target.value.split(',').map(tag => tag.trim());\r\n        setPostData(prevState => ({\r\n            ...prevState,\r\n            tags: tagsArray\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form \r\n                autoComplete=\"off\" \r\n                noValidate \r\n                className={`${classes.root} ${classes.form}`} \r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Typography variant=\"h6\">{currentId ? 'Editing ' : 'Creating '} a Memory</Typography>\r\n                \r\n                <TextField \r\n                    name=\"creator\" \r\n                    variant=\"outlined\" \r\n                    label=\"Creator\" \r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={handleChange}  \r\n                    required\r\n                />\r\n\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\" \r\n                    label=\"Title\" \r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n\r\n                <TextField \r\n                    name=\"message\" \r\n                    variant=\"outlined\" \r\n                    label=\"Message\" \r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n\r\n                <TextField \r\n                    name=\"tags\"\r\n                    variant=\"outlined\"\r\n                    label=\"Tags (comma separated)\" \r\n                    fullWidth\r\n                    value={postData.tags.join(', ')}\r\n                    onChange={handleTagsChange} \r\n                />\r\n\r\n                <div className={classes.fileInput}>\r\n                    <FileBase \r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({ base64 }) => setPostData(prevState => ({ ...prevState, selectedFile: base64 }))}\r\n                    />\r\n                </div>\r\n\r\n                <Button \r\n                    className={classes.buttonSubmit} \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    size=\"large\" \r\n                    type=\"submit\" \r\n                    fullWidth\r\n                >\r\n                    Submit\r\n                </Button>\r\n                \r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    size=\"small\" \r\n                    onClick={clear} \r\n                    fullWidth\r\n                >\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}